#!/usr/bin/env ts-node
"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const blue_tape_1 = __importDefault(require("blue-tape"));
// tslint:disable:no-shadowed-variable
// import sinon from 'sinon'
const puppet_puppeteer_1 = require("./puppet-puppeteer");
blue_tape_1.default('Puppet Puppeteer Event smoke testing', (t) => __awaiter(this, void 0, void 0, function* () {
    const puppet = new puppet_puppeteer_1.PuppetPuppeteer();
    try {
        yield puppet.start();
        t.pass('should be inited');
        yield puppet.stop();
        t.pass('should be quited');
    }
    catch (e) {
        t.fail('exception: ' + e.message);
    }
}));
//# sourceMappingURL=event.spec.js.map